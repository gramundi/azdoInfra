# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/
variables:
  - group: project-infrastructure-dev
steps:
- task: CopyFiles@2
  inputs:
     SourceFolder: ''
     Contents: '**'
     TargetFolder: '$(Build.ArtifactStagingDirectory)'

- task: AzureResourceManagerTemplateDeployment@3
  displayName: 'Creating Azure Container Registry'
  inputs:
    deploymentScope: 'Resource Group'
    azureResourceManagerConnection: AzureConnection
    action: 'Create Or Update Resource Group'
    resourceGroupName: pythonsolution
    location: $(variables.location)
    templateLocation: 'Linked artifact'
    csmFile: '$(Build.ArtifactStagingDirectory)/acr/acr.json'
    csmParametersFile: '$(Build.ArtifactStagingDirectory)/acr/acr.parameters.json'
    overrideParameters: '-acrName acrlabpython'
    deploymentMode: 'Incremental'

- task: AzureResourceManagerTemplateDeployment@3
  displayName: 'Creating Azure Key Vault'
  inputs:
    deploymentScope: 'Resource Group'
    azureResourceManagerConnection: AzureConnection
    action: 'Create Or Update Resource Group'
    resourceGroupName: pythonsolution
    location: $(variables.location)
    templateLocation: 'Linked artifact'
    csmFile: '$(Build.ArtifactStagingDirectory)/akv/akv.json'
    csmParametersFile: '$(Build.ArtifactStagingDirectory)/akv/akv.parameters.json'
    overrideParameters: '-vaultName akvlabpython'
    deploymentMode: 'Incremental'

- task: AzureKeyVault@1
  inputs:
      ConnectedServiceName: AzureConnection
      KeyVaultName: keyvaultTestLabGiov01
      SecretsFilter: 'adospClientID,adospSecret'
      RunAsPreJob: true 
- script: |
      az login --service-principal -u $(adospClientID) -p $(adospSecret) --tenant c9a7654a-5212-4510-94a0-57f7f18d33b6
  displayName: 'Login into my Tenant'

- bash: |
   sc=`az acr show --name acrlabpython  --query id --output tsv`
   echo "##vso[task.setvariable variable=sc;]$sc"
   echo "sc "$sc
   az ad sp create-for-rbac --name http://$(acrName)-pull --role acrpull --scopes $sc
  displayName: 'Creating sp with acrpull permission to the container registry'